{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState } from 'react';\nimport * as S from './styles';\n\nconst Checkbox = (_ref) => {\n  let {\n    onCheck,\n    isChecked = false,\n    label,\n    labelFor = '',\n    labelColor = 'white100',\n    value\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"onCheck\", \"isChecked\", \"label\", \"labelFor\", \"labelColor\", \"value\"]);\n\n  // controlled component (state)\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(isChecked);\n\n  const onChange = () => {\n    const status = !checked; // true => false => true\n\n    setChecked(status);\n    !!onCheck && onCheck(status);\n  };\n\n  return /*#__PURE__*/_jsxs(S.Wrapper, {\n    children: [/*#__PURE__*/_jsx(S.Input, _objectSpread({\n      id: labelFor,\n      type: \"checkbox\",\n      onChange: onChange,\n      checked: checked,\n      value: value\n    }, props)), !!label && /*#__PURE__*/_jsx(S.Label, {\n      htmlFor: labelFor,\n      labelColor: labelColor,\n      children: label\n    })]\n  });\n};\n\nexport default Checkbox;","map":null,"metadata":{},"sourceType":"module"}