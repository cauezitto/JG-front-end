{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport { useStateContext } from 'context';\nimport { useRouter } from 'next/router';\nexport var getServerSideProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = null;\n\n            if (data) {\n              _context.next = 4;\n              break;\n            }\n\n            console.log('redirecionado');\n            return _context.abrupt(\"return\", {\n              redirect: {\n                destination: '/',\n                permanent: false\n              }\n            });\n\n          case 4:\n            return _context.abrupt(\"return\", {\n              props: {} // will be passed to the page component as props\n\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getServerSideProps(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar PrivateRoute = function PrivateRoute(_ref2) {\n  _s();\n\n  var children = _ref2.children;\n  var router = useRouter();\n\n  var _useStateContext = useStateContext(),\n      setToken = _useStateContext.setToken,\n      token = _useStateContext.token;\n\n  var logout = function logout() {\n    setToken(null); //tokenStorageHandler.eraseToken()\n\n    router.push('/login');\n  }; // useEffect(() => {\n  //   logout()\n  // }, [])\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n_s(PrivateRoute, \"J54Nggw5feypRv07l2Su10+PrJA=\", false, function () {\n  return [useRouter, useStateContext];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/cauezitto/Documents/projetos/JG/front-end/src/components/PrivateRoute/index.tsx"],"names":["useStateContext","useRouter","getServerSideProps","context","data","console","log","redirect","destination","permanent","props","PrivateRoute","children","router","setToken","token","logout","push"],"mappings":";;;;;;;AAAA,SAASA,eAAT,QAAgC,SAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAO,IAAMC,kBAAsC;AAAA,sEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9CC,YAAAA,IAD8C,GACvC,IADuC;;AAAA,gBAE/CA,IAF+C;AAAA;AAAA;AAAA;;AAGlDC,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAHkD,6CAI3C;AACLC,cAAAA,QAAQ,EAAE;AACRC,gBAAAA,WAAW,EAAE,GADL;AAERC,gBAAAA,SAAS,EAAE;AAFH;AADL,aAJ2C;;AAAA;AAAA,6CAY7C;AACLC,cAAAA,KAAK,EAAE,EADF,CACK;;AADL,aAZ6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtCR,kBAAsC;AAAA;AAAA;AAAA,GAA5C;;AAiBP,IAAMS,YAAsB,GAAG,SAAzBA,YAAyB,QAAkB;AAAA;;AAAA,MAAfC,QAAe,SAAfA,QAAe;AAC/C,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;;AAD+C,yBAEnBD,eAAe,EAFI;AAAA,MAEvCc,QAFuC,oBAEvCA,QAFuC;AAAA,MAE7BC,KAF6B,oBAE7BA,KAF6B;;AAG/C,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBF,IAAAA,QAAQ,CAAC,IAAD,CAAR,CADmB,CAEnB;;AACAD,IAAAA,MAAM,CAACI,IAAP,CAAY,QAAZ;AACD,GAJD,CAH+C,CAQ/C;AACA;AACA;;;AACA,sBAAO;AAAA,cAAGL;AAAH,mBAAP;AACD,CAZD;;GAAMD,Y;UACWV,S,EACaD,e;;;KAFxBW,Y;AAcN,eAAeA,YAAf","sourcesContent":["import { useStateContext } from 'context'\nimport { useRouter } from 'next/router'\nimport { GetServerSideProps } from 'next'\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const data = null\n  if (!data) {\n    console.log('redirecionado')\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false\n      }\n    }\n  }\n\n  return {\n    props: {} // will be passed to the page component as props\n  }\n}\n\nconst PrivateRoute: React.FC = ({ children }) => {\n  const router = useRouter()\n  const { setToken, token } = useStateContext()\n  const logout = () => {\n    setToken(null)\n    //tokenStorageHandler.eraseToken()\n    router.push('/login')\n  }\n  // useEffect(() => {\n  //   logout()\n  // }, [])\n  return <>{children}</>\n}\n\nexport default PrivateRoute\n"]},"metadata":{},"sourceType":"module"}