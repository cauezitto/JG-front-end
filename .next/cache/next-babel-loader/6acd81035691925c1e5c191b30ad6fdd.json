{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\cauezitto\\\\Documents\\\\projetos\\\\JG\\\\front-end\\\\src\\\\components\\\\Input\\\\index.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as S from './styles';\n\nvar Input = function Input(props) {\n  if (props.textArea) {\n    return /*#__PURE__*/_jsxDEV(S.TextArea, _objectSpread({\n      onChange: props.onChange,\n      value: props.value\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.Input, _objectSpread({\n    onChange: props.onChange,\n    value: props.value\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/cauezitto/Documents/projetos/JG/front-end/src/components/Input/index.tsx"],"names":["S","Input","props","textArea","onChange","value"],"mappings":";;;;;;;;;;AACA,OAAO,KAAKA,CAAZ,MAAmB,UAAnB;;AAuBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAuB;AACnC,MAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,wBACE,QAAC,CAAD,CAAG,QAAH;AAAY,MAAA,QAAQ,EAAED,KAAK,CAACE,QAA5B;AAAsC,MAAA,KAAK,EAAEF,KAAK,CAACG;AAAnD,OAA8DH,KAA9D;AAAA;AAAA;AAAA;AAAA,aADF;AAGD;;AACD,sBAAO,QAAC,CAAD,CAAG,KAAH;AAAS,IAAA,QAAQ,EAAEA,KAAK,CAACE,QAAzB;AAAmC,IAAA,KAAK,EAAEF,KAAK,CAACG;AAAhD,KAA2DH,KAA3D;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAPD;;KAAMD,K;AASN,eAAeA,KAAf","sourcesContent":["import { Color } from 'types/style'\nimport * as S from './styles'\n\nexport type InputProps = {\n  value?: string\n  placeholder?: string\n  onChange?: (value: any) => void\n  borderColor?: Color\n  fill?: Color\n  width?: number\n  height?: number\n  borderWidth?: number\n  font?: 'ubuntu' | 'roboto' | 'robotoCondensed'\n  fontSize?: 'small' | 'medium' | 'large' | 'xlarge' | 'xxlarge'\n  textArea?: boolean\n  type?: string\n  className?: string\n  readOnly?: boolean\n  radius?: number\n  required?: boolean\n  maxLength?: number\n  margin?: string\n}\n\nconst Input = (props: InputProps) => {\n  if (props.textArea) {\n    return (\n      <S.TextArea onChange={props.onChange} value={props.value} {...props} />\n    )\n  }\n  return <S.Input onChange={props.onChange} value={props.value} {...props} />\n}\n\nexport default Input\n"]},"metadata":{},"sourceType":"module"}