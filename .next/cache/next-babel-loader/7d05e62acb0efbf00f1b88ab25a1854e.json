{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport handleCartStorage from 'utils/handleCart';\nimport { useCookies } from 'react-cookie';\nconst Context = /*#__PURE__*/createContext(null);\n\nconst StatesProvider = ({\n  children\n}) => {\n  const {\n    0: server,\n    1: setServer\n  } = useState('');\n  const {\n    0: cart,\n    1: setCart\n  } = useState({\n    products: [],\n    total: 0\n  });\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const [cookie, setCookie] = useCookies(['user']);\n  useEffect(() => {\n    if (!isLoading) {\n      handleCartStorage.addToCart(cart);\n      setCookie('cart', cart, {\n        path: '/',\n        maxAge: 604800,\n        // Expires after 1hr\n        sameSite: true\n      });\n    }\n  }, [cart]);\n  useEffect(() => {\n    setIsLoading(false);\n    setCart(handleCartStorage.getCart());\n    setUser(cookie.user);\n    setCookie('cart', handleCartStorage.getCart(), {\n      path: '/',\n      maxAge: 604800,\n      // Expires after 1hr\n      sameSite: true\n    });\n    setServer(process.env.NEXT_PUBLIC_SERVER_HOST ? process.env.NEXT_PUBLIC_SERVER_HOST : '');\n  }, []);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: {\n      server,\n      token,\n      setToken,\n      user,\n      setUser,\n      cart,\n      setCart\n    },\n    children: children\n  });\n};\n\nexport default StatesProvider;\nexport const useStateContext = () => {\n  const context = useContext(Context);\n\n  if (!context) {\n    throw new Error('Use count precisa estar dentro de um provider');\n  }\n\n  const {\n    server,\n    token,\n    setToken,\n    user,\n    setUser,\n    cart,\n    setCart\n  } = context;\n  return {\n    server,\n    token,\n    setToken,\n    user,\n    setUser,\n    cart,\n    setCart\n  };\n};","map":null,"metadata":{},"sourceType":"module"}