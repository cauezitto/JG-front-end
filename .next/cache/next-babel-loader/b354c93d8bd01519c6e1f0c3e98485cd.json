{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\cauezitto\\\\Documents\\\\projetos\\\\JG\\\\front-end\\\\src\\\\components\\\\FilterAside\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Button from 'components/Button';\nimport Checkbox from 'components/CheckBox';\nimport Heading from 'components/Heading';\nimport xor from 'lodash.xor';\nimport * as S from './styles';\nimport { useRouter } from 'next/router';\n\nvar FilterAside = function FilterAside(_ref) {\n  _s();\n\n  var categorias = _ref.categorias,\n      marcas = _ref.marcas,\n      mobileShow = _ref.mobileShow,\n      onClose = _ref.onClose,\n      onFilter = _ref.onFilter,\n      _ref$initialValues = _ref.initialValues,\n      initialValues = _ref$initialValues === void 0 ? {} : _ref$initialValues,\n      isLoading = _ref.isLoading;\n\n  var _useState = useState(initialValues),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  console.log(values);\n  useEffect(function () {\n    // console.log(values)\n    onFilter(values); // this method comes from another template\n    // that we don't have access\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values]); // useEffect(() => {\n  //   if (query.nome_contains !== initial_query) {\n  //     const { nome_contains } = query\n  //     // console.log(values)\n  //     setValues({ marca: [], categorias: [], nome_contains })\n  //     setInitial_query(query.nome_contains)\n  //     // console.log('mudou')\n  //   }\n  // }, [query])\n\n  var handleCheckbox = function handleCheckbox(name, value) {\n    // if (isLoading) {\n    //   return\n    // }\n    var currentList = values[name] || [];\n    setValues(function (s) {\n      return _objectSpread(_objectSpread({}, s), {}, _defineProperty({}, name, xor(currentList, [value])));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    show: mobileShow,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      role: \"h2\",\n      textAlign: \"left\",\n      fontSize: \"xxlarge\",\n      lineBottom: false,\n      children: \"Categorias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), categorias.map(function (categoria, index) {\n      var _values$categorias;\n\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        labelColor: \"black\",\n        color: \"black\",\n        label: categoria.nome,\n        type: \"checkbox\",\n        onCheck: function onCheck() {\n          return handleCheckbox('categorias', categoria.nome);\n        },\n        isChecked: (_values$categorias = values['categorias']) === null || _values$categorias === void 0 ? void 0 : _values$categorias.includes(categoria.nome)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Heading, {\n      role: \"h2\",\n      textAlign: \"left\",\n      fontSize: \"xxlarge\",\n      lineBottom: false,\n      children: \"Marcas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this), marcas.map(function (marca, index) {\n      var _values$marca;\n\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        labelColor: \"black\",\n        color: \"black\",\n        label: marca.nome,\n        onCheck: function onCheck() {\n          return handleCheckbox('marca', marca.nome);\n        },\n        isChecked: (_values$marca = values['marca']) === null || _values$marca === void 0 ? void 0 : _values$marca.includes(marca.nome)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(S.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fill: \"red100\",\n        fontSize: \"large\",\n        radius: 10,\n        onClick: onClose,\n        children: \"Aplicar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FilterAside, \"Rc27VpFP5DAAkQghYr8Phw+OLW8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilterAside;\nexport default FilterAside;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterAside\");","map":{"version":3,"sources":["C:/Users/cauezitto/Documents/projetos/JG/front-end/src/components/FilterAside/index.tsx"],"names":["useState","useEffect","Button","Checkbox","Heading","xor","S","useRouter","FilterAside","categorias","marcas","mobileShow","onClose","onFilter","initialValues","isLoading","values","setValues","query","console","log","handleCheckbox","name","value","currentList","s","map","categoria","index","nome","includes","marca"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Button from 'components/Button'\nimport Checkbox from 'components/CheckBox'\nimport Heading from 'components/Heading'\nimport { ParsedUrlQueryInput } from 'querystring'\nimport xor from 'lodash.xor'\nimport * as S from './styles'\nimport { useRouter } from 'next/router'\n\ntype Field = {\n  nome: string\n}\n\nexport type ItemProps = {\n  title: string\n  name: string\n  type: string\n  fields: Field[]\n}\n\ntype Values = ParsedUrlQueryInput\n\nexport type FilteredAsidProps = {\n  categorias: Array<{\n    nome: string\n  }>\n  marcas: Array<{\n    nome: string\n  }>\n  mobileShow?: boolean\n  onClose: VoidFunction\n  onFilter: (values: Values) => void\n  initialValues?: Values\n  isLoading?: boolean\n}\n\nconst FilterAside = ({\n  categorias,\n  marcas,\n  mobileShow,\n  onClose,\n  onFilter,\n  initialValues = {},\n  isLoading\n}: FilteredAsidProps) => {\n  const [values, setValues] = useState(initialValues)\n  const { query } = useRouter()\n  console.log(values)\n\n  useEffect(() => {\n    // console.log(values)\n    onFilter(values)\n    // this method comes from another template\n    // that we don't have access\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values])\n\n  // useEffect(() => {\n  //   if (query.nome_contains !== initial_query) {\n  //     const { nome_contains } = query\n  //     // console.log(values)\n  //     setValues({ marca: [], categorias: [], nome_contains })\n  //     setInitial_query(query.nome_contains)\n  //     // console.log('mudou')\n  //   }\n  // }, [query])\n\n  const handleCheckbox = (name: string, value: string) => {\n    // if (isLoading) {\n    //   return\n    // }\n    const currentList = (values[name] as []) || []\n    setValues((s) => ({ ...s, [name]: xor(currentList, [value]) }))\n  }\n\n  return (\n    <S.Wrapper show={mobileShow}>\n      <Heading role=\"h2\" textAlign=\"left\" fontSize=\"xxlarge\" lineBottom={false}>\n        Categorias\n      </Heading>\n\n      {categorias.map((categoria, index) => (\n        <Checkbox\n          key={index}\n          labelColor=\"black\"\n          color=\"black\"\n          label={categoria.nome}\n          type=\"checkbox\"\n          onCheck={() => handleCheckbox('categorias', categoria.nome)}\n          isChecked={(values['categorias'] as string[])?.includes(\n            categoria.nome\n          )}\n        />\n      ))}\n      <br />\n      <hr />\n      <br />\n      <Heading role=\"h2\" textAlign=\"left\" fontSize=\"xxlarge\" lineBottom={false}>\n        Marcas\n      </Heading>\n\n      {marcas.map((marca, index) => (\n        <Checkbox\n          key={index}\n          labelColor=\"black\"\n          color=\"black\"\n          label={marca.nome}\n          onCheck={() => handleCheckbox('marca', marca.nome)}\n          isChecked={(values['marca'] as string[])?.includes(marca.nome)}\n        />\n      ))}\n\n      <S.Footer>\n        {/* <Button fill=\"gray300\" fontSize=\"large\" radius={10} onClick={onClose}>\n          Fechar\n        </Button>\n        &nbsp; */}\n        <Button fill=\"red100\" fontSize=\"large\" radius={10} onClick={onClose}>\n          Aplicar\n        </Button>\n      </S.Footer>\n    </S.Wrapper>\n  )\n}\n\nexport default FilterAside\n"]},"metadata":{},"sourceType":"module"}