{"ast":null,"code":"export default {\n  priceToNumber: function priceToNumber(priceString) {\n    var price = priceString.replace('R$', '').replace(',', '.');\n    var priceNumber = Number(price);\n    return priceNumber;\n  },\n  priceNumberToReadblePrice: function priceNumberToReadblePrice(valor) {\n    var floatValor = valor === null || valor === void 0 ? void 0 : valor.toFixed(2).replace('.', ',');\n    var readblePrice = \"R$ \".concat(floatValor);\n    return readblePrice;\n  },\n  handleMultiplyPriceByQuantity: function handleMultiplyPriceByQuantity(quant, price) {\n    var numberPrice = this.priceToNumber(price);\n    var total = numberPrice * quant;\n    var readblePrice = this.priceNumberToReadblePrice(total);\n    return readblePrice;\n  }\n};","map":{"version":3,"sources":["C:/Users/cauezitto/Documents/projetos/JG/front-end/src/utils/handlePrice.ts"],"names":["priceToNumber","priceString","price","replace","priceNumber","Number","priceNumberToReadblePrice","valor","floatValor","toFixed","readblePrice","handleMultiplyPriceByQuantity","quant","numberPrice","total"],"mappings":"AAAA,eAAe;AACbA,EAAAA,aADa,yBACCC,WADD,EACsB;AACjC,QAAMC,KAAK,GAAGD,WAAW,CAACE,OAAZ,CAAoB,IAApB,EAA0B,EAA1B,EAA8BA,OAA9B,CAAsC,GAAtC,EAA2C,GAA3C,CAAd;AACA,QAAMC,WAAW,GAAGC,MAAM,CAACH,KAAD,CAA1B;AACA,WAAOE,WAAP;AACD,GALY;AAObE,EAAAA,yBAPa,qCAOaC,KAPb,EAO4B;AACvC,QAAMC,UAAU,GAAGD,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEE,OAAP,CAAe,CAAf,EAAkBN,OAAlB,CAA0B,GAA1B,EAA+B,GAA/B,CAAnB;AACA,QAAMO,YAAY,gBAASF,UAAT,CAAlB;AACA,WAAOE,YAAP;AACD,GAXY;AAabC,EAAAA,6BAba,yCAaiBC,KAbjB,EAagCV,KAbhC,EAa+C;AAC1D,QAAMW,WAAW,GAAG,KAAKb,aAAL,CAAmBE,KAAnB,CAApB;AAEA,QAAMY,KAAK,GAAGD,WAAW,GAAGD,KAA5B;AAEA,QAAMF,YAAY,GAAG,KAAKJ,yBAAL,CAA+BQ,KAA/B,CAArB;AAEA,WAAOJ,YAAP;AACD;AArBY,CAAf","sourcesContent":["export default {\n  priceToNumber(priceString: string) {\n    const price = priceString.replace('R$', '').replace(',', '.')\n    const priceNumber = Number(price)\n    return priceNumber\n  },\n\n  priceNumberToReadblePrice(valor: number) {\n    const floatValor = valor?.toFixed(2).replace('.', ',')\n    const readblePrice = `R$ ${floatValor}`\n    return readblePrice\n  },\n\n  handleMultiplyPriceByQuantity(quant: number, price: string) {\n    const numberPrice = this.priceToNumber(price)\n\n    const total = numberPrice * quant\n\n    const readblePrice = this.priceNumberToReadblePrice(total)\n\n    return readblePrice\n  }\n}\n"]},"metadata":{},"sourceType":"module"}