{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\cauezitto\\\\Documents\\\\projetos\\\\JG\\\\front-end\\\\src\\\\pages\\\\loja.tsx\";\nimport { useState } from 'react';\nimport PaymentsBanner from 'components/PaymentsBanner';\nimport { FilterProducts } from 'graphql/queryes/produtos';\nimport DefaultTemplate from 'templates/Default';\nimport { initializeApollo } from 'utils/apollo';\nimport * as S from 'styles/pages/loja';\nimport FilterAside from 'components/FilterAside';\nimport PaddingWrapper from 'components/PaddingWrapper';\nimport { HorizontalPaddingWrapper } from 'styles/pages/home';\nimport ProductCard from 'components/ProductCard';\nimport { FiFilter } from 'react-icons/fi';\nimport { getCategorias } from 'graphql/queryes/categorias';\nimport { useRouter } from 'next/router';\nimport { parseQueryStringToFilter, parseQueryStringToWhere } from 'utils/filter';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport { useQueryProducts } from 'graphql/queryes/produtos';\n\nconst Loja = ({\n  categorias = [],\n  marcas = [],\n  filterItems\n}) => {\n  var _data$produtosConnect, _data$produtosConnect2;\n\n  const {\n    0: showFilterAside,\n    1: setShowFilterAside\n  } = useState(false);\n  const {\n    push,\n    query\n  } = useRouter();\n  const {\n    data,\n    loading,\n    fetchMore\n  } = useQueryProducts({\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      limit: 2,\n      where: parseQueryStringToWhere({\n        queryString: query,\n        filterItems\n      })\n    }\n  }); // if (!data) return <p>loading...</p>\n  // console.log(data)\n  // console.log(filterItems)\n  // console.log(parseQueryStringToWhere({ queryString: query, filterItems }))\n\n  const handleCloseAside = () => {\n    setShowFilterAside(false);\n  }; // const { produtos, produtosConnection } = data\n\n\n  const hasMoreGames = (data === null || data === void 0 ? void 0 : data.produtos.length) < ((data === null || data === void 0 ? void 0 : (_data$produtosConnect = data.produtosConnection) === null || _data$produtosConnect === void 0 ? void 0 : (_data$produtosConnect2 = _data$produtosConnect.values) === null || _data$produtosConnect2 === void 0 ? void 0 : _data$produtosConnect2.length) || 0);\n\n  const handleShowMore = () => {\n    var _data$produtos;\n\n    fetchMore({\n      variables: {\n        limit: 2,\n        start: data === null || data === void 0 ? void 0 : (_data$produtos = data.produtos) === null || _data$produtos === void 0 ? void 0 : _data$produtos.length\n      }\n    });\n  };\n\n  const handleFilter = items => {\n    push({\n      pathname: '/loja',\n      query: items\n    });\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(DefaultTemplate, {\n    categorias: categorias,\n    children: [/*#__PURE__*/_jsxDEV(PaymentsBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaddingWrapper, {\n      children: /*#__PURE__*/_jsxDEV(HorizontalPaddingWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(S.Content, {\n          children: [/*#__PURE__*/_jsxDEV(S.MobileFilterOpener, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              role: \"button\",\n              className: \"filter-opener-button\",\n              onClick: () => {\n                setShowFilterAside(true);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiFilter, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), \"\\xA0 filtros\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FilterAside, {\n            onClose: handleCloseAside,\n            mobileShow: showFilterAside,\n            marcas: marcas,\n            categorias: categorias,\n            onFilter: handleFilter,\n            isLoading: loading,\n            initialValues: parseQueryStringToFilter({\n              queryString: query,\n              filterItems\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Carregando...\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(S.ProductsList, {\n            children: data === null || data === void 0 ? void 0 : data.produtos.map((produto, index) => {\n              var _produto$cover;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"center\",\n                children: /*#__PURE__*/_jsxDEV(ProductCard, {\n                  id: produto === null || produto === void 0 ? void 0 : produto.id,\n                  image: process.env.NEXT_PUBLIC_SERVER_HOST + (produto === null || produto === void 0 ? void 0 : (_produto$cover = produto.cover) === null || _produto$cover === void 0 ? void 0 : _produto$cover.url),\n                  name: produto === null || produto === void 0 ? void 0 : produto.nome,\n                  price: produto === null || produto === void 0 ? void 0 : produto.preco,\n                  slug: produto === null || produto === void 0 ? void 0 : produto.slug\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), hasMoreGames && /*#__PURE__*/_jsxDEV(HorizontalPaddingWrapper, {\n          children: /*#__PURE__*/_jsxDEV(S.ViewMoreWrapper, {\n            onClick: handleShowMore,\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"Carregando...\"\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Ver Mais \\xA0 \", /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const client = initializeApollo();\n  const {\n    data\n  } = await client.query({\n    query: getCategorias\n  });\n  const filterCategories = {\n    title: 'Categorias',\n    name: 'categorias',\n    type: 'checkbox',\n    fields: data.categorias\n  };\n  const filterBrands = {\n    title: 'Marca',\n    name: 'marca',\n    type: 'checkbox',\n    fields: data.marcas\n  };\n  const filterItems = [filterCategories, filterBrands];\n  const response = await client.query({\n    query: FilterProducts,\n    variables: {\n      limit: 2,\n      where: parseQueryStringToWhere({\n        queryString: query,\n        filterItems\n      })\n    }\n  }); // console.log(parseQueryStringToWhere({ queryString: query, filterItems }))\n\n  const {\n    produtos,\n    categorias,\n    marcas\n  } = response.data;\n  return {\n    props: {\n      produtos,\n      categorias,\n      marcas,\n      filterItems,\n      initialApolloState: client.cache.extract()\n    }\n  };\n};\nexport default Loja;","map":{"version":3,"sources":["C:/Users/cauezitto/Documents/projetos/JG/front-end/src/pages/loja.tsx"],"names":["useState","PaymentsBanner","FilterProducts","DefaultTemplate","initializeApollo","S","FilterAside","PaddingWrapper","HorizontalPaddingWrapper","ProductCard","FiFilter","getCategorias","useRouter","parseQueryStringToFilter","parseQueryStringToWhere","IoIosArrowDown","useQueryProducts","Loja","categorias","marcas","filterItems","showFilterAside","setShowFilterAside","push","query","data","loading","fetchMore","notifyOnNetworkStatusChange","variables","limit","where","queryString","handleCloseAside","hasMoreGames","produtos","length","produtosConnection","values","handleShowMore","start","handleFilter","items","pathname","map","produto","index","id","process","env","NEXT_PUBLIC_SERVER_HOST","cover","url","nome","preco","slug","getServerSideProps","client","filterCategories","title","name","type","fields","filterBrands","response","props","initialApolloState","cache","extract"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport PaymentsBanner from 'components/PaymentsBanner'\nimport { FilterProducts, getTierProducts } from 'graphql/queryes/produtos'\nimport { GetServerSideProps } from 'next'\nimport DefaultTemplate from 'templates/Default'\nimport { ProductProps } from 'types/ProductProps'\nimport { initializeApollo } from 'utils/apollo'\nimport * as S from 'styles/pages/loja'\nimport FilterAside from 'components/FilterAside'\nimport PaddingWrapper from 'components/PaddingWrapper'\nimport { HorizontalPaddingWrapper } from 'styles/pages/home'\nimport ProductCard from 'components/ProductCard'\nimport { FiFilter } from 'react-icons/fi'\nimport { getCategorias } from 'graphql/queryes/categorias'\nimport { ParsedUrlQueryInput } from 'querystring'\nimport { useRouter } from 'next/router'\nimport { parseQueryStringToFilter, parseQueryStringToWhere } from 'utils/filter'\nimport { ItemProps } from 'components/FilterAside'\nimport { IoIosArrowDown } from 'react-icons/io'\nimport { useQueryProducts } from 'graphql/queryes/produtos'\n\ntype MarketPageProps = {\n  produtos: ProductProps[]\n  categorias: Array<{\n    nome: string\n  }>\n  marcas: Array<{\n    nome: string\n  }>\n  filterItems: Pick<ItemProps, 'type' | 'name'>[]\n}\n\nconst Loja = ({\n  categorias = [],\n  marcas = [],\n  filterItems\n}: MarketPageProps) => {\n  const [showFilterAside, setShowFilterAside] = useState(false)\n  const { push, query } = useRouter()\n\n  const { data, loading, fetchMore } = useQueryProducts({\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      limit: 2,\n      where: parseQueryStringToWhere({ queryString: query, filterItems })\n    }\n  })\n\n  // if (!data) return <p>loading...</p>\n\n  // console.log(data)\n  // console.log(filterItems)\n  // console.log(parseQueryStringToWhere({ queryString: query, filterItems }))\n\n  const handleCloseAside = () => {\n    setShowFilterAside(false)\n  }\n\n  // const { produtos, produtosConnection } = data\n\n  const hasMoreGames =\n    data?.produtos.length < (data?.produtosConnection?.values?.length || 0)\n\n  const handleShowMore = () => {\n    fetchMore({ variables: { limit: 2, start: data?.produtos?.length } })\n  }\n\n  const handleFilter = (items: ParsedUrlQueryInput) => {\n    push({\n      pathname: '/loja',\n      query: items\n    })\n    return\n  }\n\n  return (\n    <DefaultTemplate categorias={categorias}>\n      <PaymentsBanner />\n      <PaddingWrapper>\n        <HorizontalPaddingWrapper>\n          <S.Content>\n            <S.MobileFilterOpener>\n              <div\n                role=\"button\"\n                className=\"filter-opener-button\"\n                onClick={() => {\n                  setShowFilterAside(true)\n                }}\n              >\n                <FiFilter />\n                &nbsp; filtros\n              </div>\n            </S.MobileFilterOpener>\n            <FilterAside\n              onClose={handleCloseAside}\n              mobileShow={showFilterAside}\n              marcas={marcas}\n              categorias={categorias}\n              onFilter={handleFilter}\n              isLoading={loading}\n              initialValues={parseQueryStringToFilter({\n                queryString: query,\n                filterItems\n              })}\n            />\n\n            {loading ? (\n              <>Carregando...</>\n            ) : (\n              <S.ProductsList>\n                {data?.produtos.map((produto: ProductProps, index: number) => (\n                  <div key={index} className=\"center\">\n                    <ProductCard\n                      id={produto?.id}\n                      image={\n                        process.env.NEXT_PUBLIC_SERVER_HOST +\n                        produto?.cover?.url\n                      }\n                      name={produto?.nome}\n                      price={produto?.preco}\n                      slug={produto?.slug}\n                    />\n                  </div>\n                ))}\n              </S.ProductsList>\n            )}\n          </S.Content>\n\n          {hasMoreGames && (\n            <HorizontalPaddingWrapper>\n              <S.ViewMoreWrapper onClick={handleShowMore}>\n                {loading ? (\n                  <>Carregando...</>\n                ) : (\n                  <>\n                    Ver Mais &nbsp; <IoIosArrowDown />\n                  </>\n                )}\n              </S.ViewMoreWrapper>\n            </HorizontalPaddingWrapper>\n          )}\n        </HorizontalPaddingWrapper>\n      </PaddingWrapper>\n    </DefaultTemplate>\n  )\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ query }) => {\n  const client = initializeApollo()\n\n  const { data } = await client.query({\n    query: getCategorias\n  })\n\n  const filterCategories = {\n    title: 'Categorias',\n    name: 'categorias',\n    type: 'checkbox',\n    fields: data.categorias\n  }\n\n  const filterBrands = {\n    title: 'Marca',\n    name: 'marca',\n    type: 'checkbox',\n    fields: data.marcas\n  }\n\n  const filterItems = [filterCategories, filterBrands]\n\n  const response = await client.query({\n    query: FilterProducts,\n    variables: {\n      limit: 2,\n      where: parseQueryStringToWhere({ queryString: query, filterItems })\n    }\n  })\n\n  // console.log(parseQueryStringToWhere({ queryString: query, filterItems }))\n\n  const { produtos, categorias, marcas } = response.data\n\n  return {\n    props: {\n      produtos,\n      categorias,\n      marcas,\n      filterItems,\n      initialApolloState: client.cache.extract()\n    }\n  }\n}\n\nexport default Loja\n"]},"metadata":{},"sourceType":"module"}