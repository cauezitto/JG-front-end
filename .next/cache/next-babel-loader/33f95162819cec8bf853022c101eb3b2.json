{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\cauezitto\\\\Documents\\\\projetos\\\\JG\\\\front-end\\\\src\\\\components\\\\ProductGalery\\\\index.tsx\";\nimport * as S from './styles';\nimport { useStateContext } from 'context';\nimport { useState } from 'react';\nconst settings = {\n  dots: false,\n  infinite: true,\n  autoplay: true,\n  autoplaySpeed: 5000,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nconst ProductGalery = ({\n  images,\n  index = 0\n}) => {\n  const {\n    server\n  } = useStateContext();\n  const {\n    0: imageIndex,\n    1: setImageIndex\n  } = useState(index); // useEffect(() => {\n  //   setImageIndex(0)\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(S.PreviewsWrapper, {\n      className: \"desktop\",\n      children: images === null || images === void 0 ? void 0 : images.map((image, index) => /*#__PURE__*/_jsxDEV(S.Preview, {\n        image: server + image.url,\n        onClick: () => {\n          setImageIndex(index);\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.SelectedImageWrapper, {\n      className: \"desktop\",\n      children: /*#__PURE__*/_jsxDEV(S.SelectedImage, {\n        src: images[imageIndex] ? server + images[imageIndex].url : server + images[0].url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProductGalery;","map":{"version":3,"sources":["C:/Users/cauezitto/Documents/projetos/JG/front-end/src/components/ProductGalery/index.tsx"],"names":["S","useStateContext","useState","settings","dots","infinite","autoplay","autoplaySpeed","speed","slidesToShow","slidesToScroll","ProductGalery","images","index","server","imageIndex","setImageIndex","map","image","url"],"mappings":";;AAAA,OAAO,KAAKA,CAAZ,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAAoBC,QAApB,QAAoC,OAApC;AAWA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE,KADS;AAEfC,EAAAA,QAAQ,EAAE,IAFK;AAGfC,EAAAA,QAAQ,EAAE,IAHK;AAIfC,EAAAA,aAAa,EAAE,IAJA;AAKfC,EAAAA,KAAK,EAAE,GALQ;AAMfC,EAAAA,YAAY,EAAE,CANC;AAOfC,EAAAA,cAAc,EAAE;AAPD,CAAjB;;AAUA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAK,GAAG;AAAlB,CAAD,KAAwC;AAC5D,QAAM;AAAEC,IAAAA;AAAF,MAAab,eAAe,EAAlC;AACA,QAAM;AAAA,OAACc,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAACW,KAAD,CAA5C,CAF4D,CAI5D;AACA;AACA;;AACA,sBACE,QAAC,CAAD,CAAG,OAAH;AAAA,4BACE,QAAC,CAAD,CAAG,eAAH;AAAmB,MAAA,SAAS,EAAC,SAA7B;AAAA,gBACGD,MADH,aACGA,MADH,uBACGA,MAAM,CAAEK,GAAR,CAAY,CAACC,KAAD,EAAQL,KAAR,kBACX,QAAC,CAAD,CAAG,OAAH;AAEE,QAAA,KAAK,EAAEC,MAAM,GAAGI,KAAK,CAACC,GAFxB;AAGE,QAAA,OAAO,EAAE,MAAM;AACbH,UAAAA,aAAa,CAACH,KAAD,CAAb;AACD;AALH,SACOA,KADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,CAAD,CAAG,oBAAH;AAAwB,MAAA,SAAS,EAAC,SAAlC;AAAA,6BACE,QAAC,CAAD,CAAG,aAAH;AACE,QAAA,GAAG,EACDD,MAAM,CAACG,UAAD,CAAN,GACID,MAAM,GAAGF,MAAM,CAACG,UAAD,CAAN,CAAmBI,GADhC,GAEIL,MAAM,GAAGF,MAAM,CAAC,CAAD,CAAN,CAAUO;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF,eAyBE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA1CD;;AA4CA,eAAeR,aAAf","sourcesContent":["import * as S from './styles'\nimport { useStateContext } from 'context'\nimport { useEffect, useState } from 'react'\nimport Nuka from 'nuka-carousel'\nimport Slider from 'react-slick'\n\nexport type GaleryProps = {\n  images: Array<{\n    url: string\n  }>\n  index?: number\n}\n\nconst settings = {\n  dots: false,\n  infinite: true,\n  autoplay: true,\n  autoplaySpeed: 5000,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1\n}\n\nconst ProductGalery = ({ images, index = 0 }: GaleryProps) => {\n  const { server } = useStateContext()\n  const [imageIndex, setImageIndex] = useState(index)\n\n  // useEffect(() => {\n  //   setImageIndex(0)\n  // }, [])\n  return (\n    <S.Wrapper>\n      <S.PreviewsWrapper className=\"desktop\">\n        {images?.map((image, index) => (\n          <S.Preview\n            key={index}\n            image={server + image.url}\n            onClick={() => {\n              setImageIndex(index)\n            }}\n          >\n            {/* <S.PreviewImage src={server + image.url} /> */}\n          </S.Preview>\n        ))}\n      </S.PreviewsWrapper>\n\n      <S.SelectedImageWrapper className=\"desktop\">\n        <S.SelectedImage\n          src={\n            images[imageIndex]\n              ? server + images[imageIndex].url\n              : server + images[0].url\n          }\n        />\n      </S.SelectedImageWrapper>\n\n      <div className=\"mobile\">\n        {/* <Slider {...settings}>\n          {images?.map((image, index) => (\n            <img src={server + image.url} key={index} />\n          ))}\n        </Slider> */}\n      </div>\n    </S.Wrapper>\n  )\n}\n\nexport default ProductGalery\n"]},"metadata":{},"sourceType":"module"}