{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\cauezitto\\\\Documents\\\\projetos\\\\JG\\\\front-end\\\\src\\\\context\\\\index.tsx\";\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport handleCartStorage from 'utils/handleCart';\nimport { useCookies } from 'react-cookie';\nconst Context = /*#__PURE__*/createContext(null);\n\nconst StatesProvider = ({\n  children\n}) => {\n  const {\n    0: server,\n    1: setServer\n  } = useState('');\n  const {\n    0: cart,\n    1: setCart\n  } = useState({\n    products: [],\n    total: 0\n  });\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const [cookie, setCookie] = useCookies(['user']);\n  useEffect(() => {\n    if (!isLoading) {\n      handleCartStorage.addToCart(cart);\n      setCookie('cart', cart, {\n        path: '/',\n        maxAge: 604800,\n        // Expires after 1hr\n        sameSite: true\n      });\n    }\n  }, [cart]);\n  useEffect(() => {\n    setIsLoading(false);\n    setCart(handleCartStorage.getCart());\n    setUser(cookie.user);\n    setCookie('cart', handleCartStorage.getCart(), {\n      path: '/',\n      maxAge: 604800,\n      // Expires after 1hr\n      sameSite: true\n    });\n    setServer(process.env.NEXT_PUBLIC_SERVER_HOST ? process.env.NEXT_PUBLIC_SERVER_HOST : '');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      server,\n      token,\n      setToken,\n      user,\n      setUser,\n      cart,\n      setCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\nexport default StatesProvider;\nexport const useStateContext = () => {\n  const context = useContext(Context);\n\n  if (!context) {\n    throw new Error('Use count precisa estar dentro de um provider');\n  }\n\n  const {\n    server,\n    token,\n    setToken,\n    user,\n    setUser,\n    cart,\n    setCart\n  } = context;\n  return {\n    server,\n    token,\n    setToken,\n    user,\n    setUser,\n    cart,\n    setCart\n  };\n};","map":{"version":3,"sources":["C:/Users/cauezitto/Documents/projetos/JG/front-end/src/context/index.tsx"],"names":["createContext","useContext","useState","useEffect","handleCartStorage","useCookies","Context","StatesProvider","children","server","setServer","cart","setCart","products","total","token","setToken","user","setUser","isLoading","setIsLoading","cookie","setCookie","addToCart","path","maxAge","sameSite","getCart","process","env","NEXT_PUBLIC_SERVER_HOST","useStateContext","context","Error"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react'\nimport CartProps from 'types/CartProps'\nimport UserProps from 'types/UserProps'\nimport handleCartStorage from 'utils/handleCart'\nimport { useCookies } from 'react-cookie'\n\ntype SetValue = (value: any) => void\ntype SetUserValue = (value: UserProps | null) => void\ntype SetTokenValue = (value: string | null) => void\ninterface ContextProps {\n  cart: CartProps\n  setCart: SetValue\n  user: UserProps | null\n  setUser: SetUserValue\n  token: string | null\n  setToken: SetTokenValue\n  server: string\n}\nconst Context = createContext<ContextProps | null>(null)\n\nconst StatesProvider: React.FC = ({ children }) => {\n  const [server, setServer] = useState('')\n  const [cart, setCart] = useState<CartProps>({\n    products: [],\n    total: 0\n  })\n  const [token, setToken] = useState<string | null>(null)\n  const [user, setUser] = useState<UserProps | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [cookie, setCookie] = useCookies(['user'])\n\n  useEffect(() => {\n    if (!isLoading) {\n      handleCartStorage.addToCart(cart)\n      setCookie('cart', cart, {\n        path: '/',\n        maxAge: 604800, // Expires after 1hr\n        sameSite: true\n      })\n    }\n  }, [cart])\n\n  useEffect(() => {\n    setIsLoading(false)\n    setCart(handleCartStorage.getCart())\n    setUser(cookie.user)\n    setCookie('cart', handleCartStorage.getCart(), {\n      path: '/',\n      maxAge: 604800, // Expires after 1hr\n      sameSite: true\n    })\n\n    setServer(\n      process.env.NEXT_PUBLIC_SERVER_HOST\n        ? process.env.NEXT_PUBLIC_SERVER_HOST\n        : ''\n    )\n  }, [])\n\n  return (\n    <Context.Provider\n      value={{ server, token, setToken, user, setUser, cart, setCart }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport default StatesProvider\n\nexport const useStateContext = () => {\n  const context = useContext(Context)\n  if (!context) {\n    throw new Error('Use count precisa estar dentro de um provider')\n  }\n\n  const { server, token, setToken, user, setUser, cart, setCart } = context\n\n  return { server, token, setToken, user, setUser, cart, setCart }\n}\n"]},"metadata":{},"sourceType":"module"}