{"ast":null,"code":"import styled, { css } from 'styled-components';\nexport var Wrapper = styled.a.withConfig({\n  displayName: \"styles__Wrapper\",\n  componentId: \"sc-114ixeq-0\"\n})([\"\", \"\"], function (_ref) {\n  var theme = _ref.theme,\n      _ref$iconColor = _ref.iconColor,\n      iconColor = _ref$iconColor === void 0 ? 'brown' : _ref$iconColor,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'black' : _ref$color,\n      _ref$textAlign = _ref.textAlign,\n      textAlign = _ref$textAlign === void 0 ? 'left' : _ref$textAlign,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? 'large' : _ref$fontSize,\n      _ref$fontWeight = _ref.fontWeight,\n      fontWeight = _ref$fontWeight === void 0 ? 'normal' : _ref$fontWeight,\n      _ref$font = _ref.font,\n      font = _ref$font === void 0 ? 'roboto' : _ref$font,\n      _ref$textDecoration = _ref.textDecoration,\n      textDecoration = _ref$textDecoration === void 0 ? 'underline' : _ref$textDecoration,\n      iconSize = _ref.iconSize,\n      justify = _ref.justify;\n  return css([\"text-decoration:none;display:flex;align-items:center;cursor:pointer;text-decoration:\", \";font-family:\", \";font-weight:\", \";font-size:\", \";color:\", \";text-align:\", \";\", \" svg{font-size:\", \";color:\", \";\", \"}\"], textDecoration, theme.font.family[font], theme.font[fontWeight], theme.font.sizes[fontSize], theme.colors[color], textAlign, justify && css([\"display:flex;justify-content:\", \";\"], justify), theme.font.sizes.xlarge, theme.colors[iconColor], iconSize && css([\"font-size:\", \";\"], theme.font.sizes[iconSize]));\n});","map":null,"metadata":{},"sourceType":"module"}