{"ast":null,"code":"export const parseQueryStringToWhere = ({\n  queryString,\n  filterItems\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const obj = {};\n  Object.keys(queryString).filter(item => item !== 'sort').forEach(key => {\n    const item = filterItems === null || filterItems === void 0 ? void 0 : filterItems.find(item => item.name === key);\n    const isCheckbox = (item === null || item === void 0 ? void 0 : item.type) === 'checkbox';\n    obj[key] = !isCheckbox ? queryString[key] : {\n      nome_contains: queryString[key]\n    };\n  });\n  return obj;\n};\nexport const parseQueryStringToFilter = ({\n  queryString,\n  filterItems\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const obj = {};\n  Object.keys(queryString).forEach(key => {\n    const item = filterItems === null || filterItems === void 0 ? void 0 : filterItems.find(item => item.name === key);\n    const isCheckbox = (item === null || item === void 0 ? void 0 : item.type) === 'checkbox';\n    const isArray = Array.isArray(queryString[key]);\n    obj[key] = !isArray && isCheckbox ? [queryString[key]] : queryString[key];\n  });\n  return obj;\n};","map":{"version":3,"sources":["C:/Users/cauezitto/Documents/projetos/JG/front-end/src/utils/filter.ts"],"names":["parseQueryStringToWhere","queryString","filterItems","obj","Object","keys","filter","item","forEach","key","find","name","isCheckbox","type","nome_contains","parseQueryStringToFilter","isArray","Array"],"mappings":"AAQA,OAAO,MAAMA,uBAAuB,GAAG,CAAC;AACtCC,EAAAA,WADsC;AAEtCC,EAAAA;AAFsC,CAAD,KAGtB;AACf;AACA,QAAMC,GAAQ,GAAG,EAAjB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EACGK,MADH,CACWC,IAAD,IAAUA,IAAI,KAAK,MAD7B,EAEGC,OAFH,CAEYC,GAAD,IAAS;AAChB,UAAMF,IAAI,GAAGL,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEQ,IAAb,CAAmBH,IAAD,IAAUA,IAAI,CAACI,IAAL,KAAcF,GAA1C,CAAb;AACA,UAAMG,UAAU,GAAG,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,IAAN,MAAe,UAAlC;AAEAV,IAAAA,GAAG,CAACM,GAAD,CAAH,GAAW,CAACG,UAAD,GACPX,WAAW,CAACQ,GAAD,CADJ,GAEP;AAAEK,MAAAA,aAAa,EAAEb,WAAW,CAACQ,GAAD;AAA5B,KAFJ;AAGD,GATH;AAWA,SAAON,GAAP;AACD,CAnBM;AAqBP,OAAO,MAAMY,wBAAwB,GAAG,CAAC;AACvCd,EAAAA,WADuC;AAEvCC,EAAAA;AAFuC,CAAD,KAGvB;AACf;AACA,QAAMC,GAAQ,GAAG,EAAjB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBO,OAAzB,CAAkCC,GAAD,IAAS;AACxC,UAAMF,IAAI,GAAGL,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEQ,IAAb,CAAmBH,IAAD,IAAUA,IAAI,CAACI,IAAL,KAAcF,GAA1C,CAAb;AACA,UAAMG,UAAU,GAAG,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,IAAN,MAAe,UAAlC;AACA,UAAMG,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcf,WAAW,CAACQ,GAAD,CAAzB,CAAhB;AAEAN,IAAAA,GAAG,CAACM,GAAD,CAAH,GAAW,CAACO,OAAD,IAAYJ,UAAZ,GAAyB,CAACX,WAAW,CAACQ,GAAD,CAAZ,CAAzB,GAA8CR,WAAW,CAACQ,GAAD,CAApE;AACD,GAND;AAQA,SAAON,GAAP;AACD,CAhBM","sourcesContent":["import { ItemProps } from 'components/FilterAside'\nimport { ParsedUrlQueryInput } from 'querystring'\n\ntype ParseArgs = {\n  queryString: ParsedUrlQueryInput\n  filterItems: Pick<ItemProps, 'type' | 'name'>[]\n}\n\nexport const parseQueryStringToWhere = ({\n  queryString,\n  filterItems\n}: ParseArgs) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const obj: any = {}\n\n  Object.keys(queryString)\n    .filter((item) => item !== 'sort')\n    .forEach((key) => {\n      const item = filterItems?.find((item) => item.name === key)\n      const isCheckbox = item?.type === 'checkbox'\n\n      obj[key] = !isCheckbox\n        ? queryString[key]\n        : { nome_contains: queryString[key] }\n    })\n\n  return obj\n}\n\nexport const parseQueryStringToFilter = ({\n  queryString,\n  filterItems\n}: ParseArgs) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const obj: any = {}\n\n  Object.keys(queryString).forEach((key) => {\n    const item = filterItems?.find((item) => item.name === key)\n    const isCheckbox = item?.type === 'checkbox'\n    const isArray = Array.isArray(queryString[key])\n\n    obj[key] = !isArray && isCheckbox ? [queryString[key]] : queryString[key]\n  })\n\n  return obj\n}\n"]},"metadata":{},"sourceType":"module"}