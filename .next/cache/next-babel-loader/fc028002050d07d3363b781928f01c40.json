{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\cauezitto\\\\Documents\\\\projetos\\\\JG\\\\front-end\\\\src\\\\components\\\\ProductGalery\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as S from './styles';\nimport { useStateContext } from 'context';\nimport { useState } from 'react';\nvar settings = {\n  dots: false,\n  infinite: true,\n  autoplay: true,\n  autoplaySpeed: 5000,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nvar ProductGalery = function ProductGalery(_ref) {\n  _s();\n\n  var images = _ref.images,\n      _ref$index = _ref.index,\n      index = _ref$index === void 0 ? 0 : _ref$index;\n\n  var _useStateContext = useStateContext(),\n      server = _useStateContext.server;\n\n  var _useState = useState(index),\n      imageIndex = _useState[0],\n      setImageIndex = _useState[1]; // useEffect(() => {\n  //   setImageIndex(0)\n  // }, [])\n\n\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(S.PreviewsWrapper, {\n      className: \"desktop\",\n      children: images === null || images === void 0 ? void 0 : images.map(function (image, index) {\n        return /*#__PURE__*/_jsxDEV(S.Preview, {\n          image: server + image.url,\n          onClick: function onClick() {\n            setImageIndex(index);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.SelectedImageWrapper, {\n      className: \"desktop\",\n      children: /*#__PURE__*/_jsxDEV(S.SelectedImage, {\n        src: images[imageIndex] ? server + images[imageIndex].url : server + images[0].url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProductGalery, \"jDRTXLc7BHZX44of6GWTi5NoA6k=\", false, function () {\n  return [useStateContext];\n});\n\n_c = ProductGalery;\nexport default ProductGalery;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductGalery\");","map":{"version":3,"sources":["C:/Users/cauezitto/Documents/projetos/JG/front-end/src/components/ProductGalery/index.tsx"],"names":["S","useStateContext","useState","settings","dots","infinite","autoplay","autoplaySpeed","speed","slidesToShow","slidesToScroll","ProductGalery","images","index","server","imageIndex","setImageIndex","map","image","url"],"mappings":";;;;;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAAoBC,QAApB,QAAoC,OAApC;AAWA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE,KADS;AAEfC,EAAAA,QAAQ,EAAE,IAFK;AAGfC,EAAAA,QAAQ,EAAE,IAHK;AAIfC,EAAAA,aAAa,EAAE,IAJA;AAKfC,EAAAA,KAAK,EAAE,GALQ;AAMfC,EAAAA,YAAY,EAAE,CANC;AAOfC,EAAAA,cAAc,EAAE;AAPD,CAAjB;;AAUA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAwC;AAAA;;AAAA,MAArCC,MAAqC,QAArCA,MAAqC;AAAA,wBAA7BC,KAA6B;AAAA,MAA7BA,KAA6B,2BAArB,CAAqB;;AAAA,yBACzCZ,eAAe,EAD0B;AAAA,MACpDa,MADoD,oBACpDA,MADoD;;AAAA,kBAExBZ,QAAQ,CAACW,KAAD,CAFgB;AAAA,MAErDE,UAFqD;AAAA,MAEzCC,aAFyC,iBAI5D;AACA;AACA;;;AACA,sBACE,QAAC,CAAD,CAAG,OAAH;AAAA,4BACE,QAAC,CAAD,CAAG,eAAH;AAAmB,MAAA,SAAS,EAAC,SAA7B;AAAA,gBACGJ,MADH,aACGA,MADH,uBACGA,MAAM,CAAEK,GAAR,CAAY,UAACC,KAAD,EAAQL,KAAR;AAAA,4BACX,QAAC,CAAD,CAAG,OAAH;AAEE,UAAA,KAAK,EAAEC,MAAM,GAAGI,KAAK,CAACC,GAFxB;AAGE,UAAA,OAAO,EAAE,mBAAM;AACbH,YAAAA,aAAa,CAACH,KAAD,CAAb;AACD;AALH,WACOA,KADP;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA,OAAZ;AADH;AAAA;AAAA;AAAA;AAAA,aADF,eAeE,QAAC,CAAD,CAAG,oBAAH;AAAwB,MAAA,SAAS,EAAC,SAAlC;AAAA,6BACE,QAAC,CAAD,CAAG,aAAH;AACE,QAAA,GAAG,EACDD,MAAM,CAACG,UAAD,CAAN,GACID,MAAM,GAAGF,MAAM,CAACG,UAAD,CAAN,CAAmBI,GADhC,GAEIL,MAAM,GAAGF,MAAM,CAAC,CAAD,CAAN,CAAUO;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAfF,eAyBE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,aAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmCD,CA1CD;;GAAMR,a;UACeV,e;;;KADfU,a;AA4CN,eAAeA,aAAf","sourcesContent":["import * as S from './styles'\nimport { useStateContext } from 'context'\nimport { useEffect, useState } from 'react'\nimport Nuka from 'nuka-carousel'\nimport Slider from 'react-slick'\n\nexport type GaleryProps = {\n  images: Array<{\n    url: string\n  }>\n  index?: number\n}\n\nconst settings = {\n  dots: false,\n  infinite: true,\n  autoplay: true,\n  autoplaySpeed: 5000,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1\n}\n\nconst ProductGalery = ({ images, index = 0 }: GaleryProps) => {\n  const { server } = useStateContext()\n  const [imageIndex, setImageIndex] = useState(index)\n\n  // useEffect(() => {\n  //   setImageIndex(0)\n  // }, [])\n  return (\n    <S.Wrapper>\n      <S.PreviewsWrapper className=\"desktop\">\n        {images?.map((image, index) => (\n          <S.Preview\n            key={index}\n            image={server + image.url}\n            onClick={() => {\n              setImageIndex(index)\n            }}\n          >\n            {/* <S.PreviewImage src={server + image.url} /> */}\n          </S.Preview>\n        ))}\n      </S.PreviewsWrapper>\n\n      <S.SelectedImageWrapper className=\"desktop\">\n        <S.SelectedImage\n          src={\n            images[imageIndex]\n              ? server + images[imageIndex].url\n              : server + images[0].url\n          }\n        />\n      </S.SelectedImageWrapper>\n\n      <div className=\"mobile\">\n        {/* <Slider {...settings}>\n          {images?.map((image, index) => (\n            <img src={server + image.url} key={index} />\n          ))}\n        </Slider> */}\n      </div>\n    </S.Wrapper>\n  )\n}\n\nexport default ProductGalery\n"]},"metadata":{},"sourceType":"module"}